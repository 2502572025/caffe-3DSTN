name: "P3DSTN-IsoGDNet"
layer {
  name: "data"
  type: "TridimData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    crop_size: 120
    mean_value: 128
    mean_value: 128
    mean_value: 128
    mirror: true
  }
  tridim_data_param {
    source: "/data2/xyyu/datasets/train_3.lst"
    root_folder: ""
    new_length: 10
    new_height: 120 #128
    new_width: 160 #171
    use_image: true
    show_data: false
    batch_size: 10
    shuffle: false #true
  }
}
layer {
  name: "data"
  type: "TridimData"
  top: "data"
  top: "label"
  include {
    phase: TEST
    #stage: "test-on-val"
  }
  transform_param {
    crop_size: 120
    mean_value: 128
    mean_value: 128
    mean_value: 128
    mirror: false
  }
  tridim_data_param {
    source: "/data2/xyyu/datasets/train_3.lst"
    root_folder: ""
    new_length: 10
    new_height: 120 #128
    new_width: 160 #171
    use_image: true
    show_data: false
    batch_size: 10
    shuffle: false #true
  }
}
#----------------------------p3dstn layers------------------------------
layer {
  name: "loc_conv1"
  type: "Convolution"
  bottom: "data"
  top: "loc_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    engine: CAFFE
    num_output: 64
    bias_term: false
    pad: 0
    pad: 3
    pad: 3
    kernel_size: 1
    kernel_size: 7
    kernel_size: 7
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.001
    }

  }
}
layer {
  name: "loc_bn_conv1"
  type: "BN"
  bottom: "loc_conv1"
  top: "loc_bn_conv1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: false
  }
}
layer {
  name: "loc_conv1_relu"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "loc_bn_conv1"
  top: "loc_bn_conv1"
}
layer {
  name: "loc_pool1"
  type: "Pooling3D"
  bottom: "loc_bn_conv1"
  top: "loc_pool1"
  pooling3d_param {
    pool: MAX
    pad: 0
    kernel_size: 3
    stride: 2
    pad_l: 0
    kernel_l: 2
    stride_l: 2
  }
}
layer {
  name: "loc_res2a_branch1"
  type: "Convolution"
  bottom: "loc_pool1"
  top: "loc_res2a_branch1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    engine: CAFFE
    num_output: 256
    bias_term: false
    pad: 0
    pad: 0
    pad: 0
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    stride: 1
    stride: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
  }
}
layer {
  name: "loc_bn2a_branch1"
  type: "BN"
  bottom: "loc_res2a_branch1"
  top: "loc_bn2a_branch1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
  }
}
layer {
  name: "loc_res2a_branch2a"
  type: "Convolution"
  bottom: "loc_pool1"
  top: "loc_res2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    engine: CAFFE
    num_output: 64
    bias_term: false
    pad: 0
    pad: 0
    pad: 0
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    stride: 1
    stride: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
  }
}
layer {
  name: "loc_bn2a_branch2a"
  type: "BN"
  bottom: "loc_res2a_branch2a"
  top: "loc_bn2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
  }
}
layer {
  name: "loc_res2a_branch2a_relu"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "loc_bn2a_branch2a"
  top: "loc_bn2a_branch2a"
}
layer {
  name: "loc_res2a_branch2b"
  type: "Convolution"
  bottom: "loc_bn2a_branch2a"
  top: "loc_res2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    engine: CAFFE
    num_output: 64
    bias_term: false
    pad: 0
    pad: 1
    pad: 1
    kernel_size: 1
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
  }
}
layer {
  name: "loc_bn2a_branch2b"
  type: "BN"
  bottom: "loc_res2a_branch2b"
  top: "loc_bn2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
  }
}
layer {
  name: "loc_res2a_branch2b_relu"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "loc_bn2a_branch2b"
  top: "loc_bn2a_branch2b"
}
layer {
  name: "loc_res2a_branch2b_t"
  type: "Convolution"
  bottom: "loc_bn2a_branch2b"
  top: "loc_res2a_branch2b_t"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    engine: CAFFE
    num_output: 64
    bias_term: false
    pad: 1
    pad: 0
    pad: 0
    kernel_size: 3
    kernel_size: 1
    kernel_size: 1
    stride: 1
    stride: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
  }
}
layer {
  name: "loc_bn2a_branch2b_t"
  type: "BN"
  bottom: "loc_res2a_branch2b_t"
  top: "loc_bn2a_branch2b_t"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
  }
}
layer {
  name: "loc_res2a_branch2b_t_relu"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "loc_bn2a_branch2b_t"
  top: "loc_bn2a_branch2b_t"
}
layer {
  name: "loc_res2a_branch2c"
  type: "Convolution"
  bottom: "loc_bn2a_branch2b_t"
  top: "loc_res2a_branch2c"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    engine: CAFFE
    num_output: 256
    bias_term: false
    pad: 0
    pad: 0
    pad: 0
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    stride: 1
    stride: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
  }
}
layer {
  name: "loc_bn2a_branch2c"
  type: "BN"
  bottom: "loc_res2a_branch2c"
  top: "loc_bn2a_branch2c"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  bn_param {
    slope_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    frozen: true
  }
}
layer {
  name: "loc_res2a"
  type: "Eltwise"
  bottom: "loc_bn2a_branch1"
  bottom: "loc_bn2a_branch2c"
  top: "loc_res2a"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "loc_res2a_relu"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "loc_res2a"
  top: "loc_res2a"
}
layer {
  name: "loc_pool2"
  type: "Pooling3D"
  bottom: "loc_res2a"
  top: "loc_pool2"
  pooling3d_param {
    pool: MAX
    pad: 0
    kernel_size: 1
    stride: 1
    pad_l: 0
    kernel_l: 2
    stride_l: 2
  }
}


layer {
  name: "loc_ip1"
  type: "InnerProduct"
  bottom: "loc_pool2"
  top: "loc_ip1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loc_relu1"
  type: "ReLU"
  bottom: "loc_ip1"
  top: "loc_ip1"
}

layer {
  name: "loc_ip2"
  type: "InnerProduct"
  bottom: "loc_ip1"
  top: "theta"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 12
    decay_mult: 0
  }
  inner_product_param {
    num_output: 12
    weight_filler {
      type: "constant"
      value: 0
    }
    bias_filler {
      type: "file"
      file: "examples/mnist_tests/bias_init.txt"
    }
  }
}

layer {
  name: "trist_layer"
  type: "TridimSpatialTransformer"
  bottom: "data"
  bottom: "theta"
  top: "trist_output"
}

layer {
  bottom: "trist_output"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 7
    pad: 3
    stride: 2
  }
}

layer {
  bottom: "conv1"
  top: "conv1"
  name: "bn_conv1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "conv1"
  top: "conv1"
  name: "scale_conv1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "conv1"
  top: "conv1"
  name: "conv1_relu"
  type: "ReLU"
}

layer {
  bottom: "conv1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    kernel_size: 3
    stride: 2
    pool: MAX
  }
}

layer {
  bottom: "pool1"
  top: "res2a_branch1"
  name: "res2a_branch1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2a_branch1"
  top: "res2a_branch1"
  name: "bn2a_branch1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2a_branch1"
  top: "res2a_branch1"
  name: "scale2a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "pool1"
  top: "res2a_branch2a"
  name: "res2a_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  name: "bn2a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  name: "scale2a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  name: "res2a_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res2a_branch2a"
  top: "res2a_branch2b"
  name: "res2a_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  name: "bn2a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  name: "scale2a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  name: "res2a_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res2a_branch2b"
  top: "res2a_branch2c"
  name: "res2a_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2a_branch2c"
  top: "res2a_branch2c"
  name: "bn2a_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2a_branch2c"
  top: "res2a_branch2c"
  name: "scale2a_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2a_branch1"
  bottom: "res2a_branch2c"
  top: "res2a"
  name: "res2a"
  type: "Eltwise"
}

layer {
  bottom: "res2a"
  top: "res2a"
  name: "res2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res2a"
  top: "res2b_branch2a"
  name: "res2b_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  name: "bn2b_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  name: "scale2b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  name: "res2b_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res2b_branch2a"
  top: "res2b_branch2b"
  name: "res2b_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  name: "bn2b_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  name: "scale2b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  name: "res2b_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res2b_branch2b"
  top: "res2b_branch2c"
  name: "res2b_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2b_branch2c"
  top: "res2b_branch2c"
  name: "bn2b_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2b_branch2c"
  top: "res2b_branch2c"
  name: "scale2b_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2a"
  bottom: "res2b_branch2c"
  top: "res2b"
  name: "res2b"
  type: "Eltwise"
}

layer {
  bottom: "res2b"
  top: "res2b"
  name: "res2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res2b"
  top: "res2c_branch2a"
  name: "res2c_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  name: "bn2c_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  name: "scale2c_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  name: "res2c_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res2c_branch2a"
  top: "res2c_branch2b"
  name: "res2c_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  name: "bn2c_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  name: "scale2c_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  name: "res2c_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res2c_branch2b"
  top: "res2c_branch2c"
  name: "res2c_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res2c_branch2c"
  top: "res2c_branch2c"
  name: "bn2c_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res2c_branch2c"
  top: "res2c_branch2c"
  name: "scale2c_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2b"
  bottom: "res2c_branch2c"
  top: "res2c"
  name: "res2c"
  type: "Eltwise"
}

layer {
  bottom: "res2c"
  top: "res2c"
  name: "res2c_relu"
  type: "ReLU"
}

layer {
  bottom: "res2c"
  top: "res3a_branch1"
  name: "res3a_branch1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}

layer {
  bottom: "res3a_branch1"
  top: "res3a_branch1"
  name: "bn3a_branch1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3a_branch1"
  top: "res3a_branch1"
  name: "scale3a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res2c"
  top: "res3a_branch2a"
  name: "res3a_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}

layer {
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  name: "bn3a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  name: "scale3a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  name: "res3a_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res3a_branch2a"
  top: "res3a_branch2b"
  name: "res3a_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  name: "bn3a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  name: "scale3a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  name: "res3a_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res3a_branch2b"
  top: "res3a_branch2c"
  name: "res3a_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3a_branch2c"
  top: "res3a_branch2c"
  name: "bn3a_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3a_branch2c"
  top: "res3a_branch2c"
  name: "scale3a_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3a_branch1"
  bottom: "res3a_branch2c"
  top: "res3a"
  name: "res3a"
  type: "Eltwise"
}

layer {
  bottom: "res3a"
  top: "res3a"
  name: "res3a_relu"
  type: "ReLU"
}

layer {
  bottom: "res3a"
  top: "res3b_branch2a"
  name: "res3b_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  name: "bn3b_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  name: "scale3b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  name: "res3b_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res3b_branch2a"
  top: "res3b_branch2b"
  name: "res3b_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  name: "bn3b_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  name: "scale3b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  name: "res3b_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res3b_branch2b"
  top: "res3b_branch2c"
  name: "res3b_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3b_branch2c"
  top: "res3b_branch2c"
  name: "bn3b_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3b_branch2c"
  top: "res3b_branch2c"
  name: "scale3b_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3a"
  bottom: "res3b_branch2c"
  top: "res3b"
  name: "res3b"
  type: "Eltwise"
}

layer {
  bottom: "res3b"
  top: "res3b"
  name: "res3b_relu"
  type: "ReLU"
}

layer {
  bottom: "res3b"
  top: "res3c_branch2a"
  name: "res3c_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  name: "bn3c_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  name: "scale3c_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  name: "res3c_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res3c_branch2a"
  top: "res3c_branch2b"
  name: "res3c_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  name: "bn3c_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  name: "scale3c_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  name: "res3c_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res3c_branch2b"
  top: "res3c_branch2c"
  name: "res3c_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3c_branch2c"
  top: "res3c_branch2c"
  name: "bn3c_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3c_branch2c"
  top: "res3c_branch2c"
  name: "scale3c_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3b"
  bottom: "res3c_branch2c"
  top: "res3c"
  name: "res3c"
  type: "Eltwise"
}

layer {
  bottom: "res3c"
  top: "res3c"
  name: "res3c_relu"
  type: "ReLU"
}

layer {
  bottom: "res3c"
  top: "res3d_branch2a"
  name: "res3d_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  name: "bn3d_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  name: "scale3d_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  name: "res3d_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res3d_branch2a"
  top: "res3d_branch2b"
  name: "res3d_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  name: "bn3d_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  name: "scale3d_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  name: "res3d_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res3d_branch2b"
  top: "res3d_branch2c"
  name: "res3d_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res3d_branch2c"
  top: "res3d_branch2c"
  name: "bn3d_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res3d_branch2c"
  top: "res3d_branch2c"
  name: "scale3d_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3c"
  bottom: "res3d_branch2c"
  top: "res3d"
  name: "res3d"
  type: "Eltwise"
}

layer {
  bottom: "res3d"
  top: "res3d"
  name: "res3d_relu"
  type: "ReLU"
}

layer {
  bottom: "res3d"
  top: "res4a_branch1"
  name: "res4a_branch1"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}

layer {
  bottom: "res4a_branch1"
  top: "res4a_branch1"
  name: "bn4a_branch1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4a_branch1"
  top: "res4a_branch1"
  name: "scale4a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res3d"
  top: "res4a_branch2a"
  name: "res4a_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}

layer {
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  name: "bn4a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  name: "scale4a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  name: "res4a_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res4a_branch2a"
  top: "res4a_branch2b"
  name: "res4a_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  name: "bn4a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  name: "scale4a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  name: "res4a_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res4a_branch2b"
  top: "res4a_branch2c"
  name: "res4a_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4a_branch2c"
  top: "res4a_branch2c"
  name: "bn4a_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4a_branch2c"
  top: "res4a_branch2c"
  name: "scale4a_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4a_branch1"
  bottom: "res4a_branch2c"
  top: "res4a"
  name: "res4a"
  type: "Eltwise"
}

layer {
  bottom: "res4a"
  top: "res4a"
  name: "res4a_relu"
  type: "ReLU"
}

layer {
  bottom: "res4a"
  top: "res4b_branch2a"
  name: "res4b_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  name: "bn4b_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  name: "scale4b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  name: "res4b_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res4b_branch2a"
  top: "res4b_branch2b"
  name: "res4b_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  name: "bn4b_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  name: "scale4b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  name: "res4b_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res4b_branch2b"
  top: "res4b_branch2c"
  name: "res4b_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4b_branch2c"
  top: "res4b_branch2c"
  name: "bn4b_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4b_branch2c"
  top: "res4b_branch2c"
  name: "scale4b_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4a"
  bottom: "res4b_branch2c"
  top: "res4b"
  name: "res4b"
  type: "Eltwise"
}

layer {
  bottom: "res4b"
  top: "res4b"
  name: "res4b_relu"
  type: "ReLU"
}

layer {
  bottom: "res4b"
  top: "res4c_branch2a"
  name: "res4c_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  name: "bn4c_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  name: "scale4c_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  name: "res4c_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res4c_branch2a"
  top: "res4c_branch2b"
  name: "res4c_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  name: "bn4c_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  name: "scale4c_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  name: "res4c_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res4c_branch2b"
  top: "res4c_branch2c"
  name: "res4c_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4c_branch2c"
  top: "res4c_branch2c"
  name: "bn4c_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4c_branch2c"
  top: "res4c_branch2c"
  name: "scale4c_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4b"
  bottom: "res4c_branch2c"
  top: "res4c"
  name: "res4c"
  type: "Eltwise"
}

layer {
  bottom: "res4c"
  top: "res4c"
  name: "res4c_relu"
  type: "ReLU"
}

layer {
  bottom: "res4c"
  top: "res4d_branch2a"
  name: "res4d_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  name: "bn4d_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  name: "scale4d_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  name: "res4d_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res4d_branch2a"
  top: "res4d_branch2b"
  name: "res4d_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  name: "bn4d_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  name: "scale4d_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  name: "res4d_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res4d_branch2b"
  top: "res4d_branch2c"
  name: "res4d_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4d_branch2c"
  top: "res4d_branch2c"
  name: "bn4d_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4d_branch2c"
  top: "res4d_branch2c"
  name: "scale4d_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4c"
  bottom: "res4d_branch2c"
  top: "res4d"
  name: "res4d"
  type: "Eltwise"
}

layer {
  bottom: "res4d"
  top: "res4d"
  name: "res4d_relu"
  type: "ReLU"
}

layer {
  bottom: "res4d"
  top: "res4e_branch2a"
  name: "res4e_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  name: "bn4e_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  name: "scale4e_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  name: "res4e_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res4e_branch2a"
  top: "res4e_branch2b"
  name: "res4e_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  name: "bn4e_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  name: "scale4e_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  name: "res4e_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res4e_branch2b"
  top: "res4e_branch2c"
  name: "res4e_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4e_branch2c"
  top: "res4e_branch2c"
  name: "bn4e_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4e_branch2c"
  top: "res4e_branch2c"
  name: "scale4e_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4d"
  bottom: "res4e_branch2c"
  top: "res4e"
  name: "res4e"
  type: "Eltwise"
}

layer {
  bottom: "res4e"
  top: "res4e"
  name: "res4e_relu"
  type: "ReLU"
}

layer {
  bottom: "res4e"
  top: "res4f_branch2a"
  name: "res4f_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  name: "bn4f_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  name: "scale4f_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  name: "res4f_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res4f_branch2a"
  top: "res4f_branch2b"
  name: "res4f_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  name: "bn4f_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  name: "scale4f_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  name: "res4f_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res4f_branch2b"
  top: "res4f_branch2c"
  name: "res4f_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res4f_branch2c"
  top: "res4f_branch2c"
  name: "bn4f_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res4f_branch2c"
  top: "res4f_branch2c"
  name: "scale4f_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4e"
  bottom: "res4f_branch2c"
  top: "res4f"
  name: "res4f"
  type: "Eltwise"
}

layer {
  bottom: "res4f"
  top: "res4f"
  name: "res4f_relu"
  type: "ReLU"
}

layer {
  bottom: "res4f"
  top: "res5a_branch1"
  name: "res5a_branch1"
  type: "Convolution"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}

layer {
  bottom: "res5a_branch1"
  top: "res5a_branch1"
  name: "bn5a_branch1"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5a_branch1"
  top: "res5a_branch1"
  name: "scale5a_branch1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res4f"
  top: "res5a_branch2a"
  name: "res5a_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 2
    bias_term: false
  }
}

layer {
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  name: "bn5a_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  name: "scale5a_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res5a_branch2a"
  top: "res5a_branch2a"
  name: "res5a_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res5a_branch2a"
  top: "res5a_branch2b"
  name: "res5a_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  name: "bn5a_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  name: "scale5a_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res5a_branch2b"
  top: "res5a_branch2b"
  name: "res5a_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res5a_branch2b"
  top: "res5a_branch2c"
  name: "res5a_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res5a_branch2c"
  top: "res5a_branch2c"
  name: "bn5a_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5a_branch2c"
  top: "res5a_branch2c"
  name: "scale5a_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res5a_branch1"
  bottom: "res5a_branch2c"
  top: "res5a"
  name: "res5a"
  type: "Eltwise"
}

layer {
  bottom: "res5a"
  top: "res5a"
  name: "res5a_relu"
  type: "ReLU"
}

layer {
  bottom: "res5a"
  top: "res5b_branch2a"
  name: "res5b_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  name: "bn5b_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  name: "scale5b_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res5b_branch2a"
  top: "res5b_branch2a"
  name: "res5b_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res5b_branch2a"
  top: "res5b_branch2b"
  name: "res5b_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  name: "bn5b_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  name: "scale5b_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res5b_branch2b"
  top: "res5b_branch2b"
  name: "res5b_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res5b_branch2b"
  top: "res5b_branch2c"
  name: "res5b_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res5b_branch2c"
  top: "res5b_branch2c"
  name: "bn5b_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5b_branch2c"
  top: "res5b_branch2c"
  name: "scale5b_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res5a"
  bottom: "res5b_branch2c"
  top: "res5b"
  name: "res5b"
  type: "Eltwise"
}

layer {
  bottom: "res5b"
  top: "res5b"
  name: "res5b_relu"
  type: "ReLU"
}

layer {
  bottom: "res5b"
  top: "res5c_branch2a"
  name: "res5c_branch2a"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  name: "bn5c_branch2a"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  name: "scale5c_branch2a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res5c_branch2a"
  top: "res5c_branch2a"
  name: "res5c_branch2a_relu"
  type: "ReLU"
}

layer {
  bottom: "res5c_branch2a"
  top: "res5c_branch2b"
  name: "res5c_branch2b"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  name: "bn5c_branch2b"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  name: "scale5c_branch2b"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res5c_branch2b"
  top: "res5c_branch2b"
  name: "res5c_branch2b_relu"
  type: "ReLU"
}

layer {
  bottom: "res5c_branch2b"
  top: "res5c_branch2c"
  name: "res5c_branch2c"
  type: "Convolution"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    pad: 0
    stride: 1
    bias_term: false
  }
}

layer {
  bottom: "res5c_branch2c"
  top: "res5c_branch2c"
  name: "bn5c_branch2c"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats: true
  }
}

layer {
  bottom: "res5c_branch2c"
  top: "res5c_branch2c"
  name: "scale5c_branch2c"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res5b"
  bottom: "res5c_branch2c"
  top: "res5c"
  name: "res5c"
  type: "Eltwise"
}

layer {
  bottom: "res5c"
  top: "res5c"
  name: "res5c_relu"
  type: "ReLU"
}

layer {
  bottom: "res5c"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    kernel_size: 7
    stride: 1
    pool: AVE
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool5"
  top: "ip1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "accuracy/top1"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy/top1"
  include {
    phase: TEST
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}