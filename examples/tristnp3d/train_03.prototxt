# TridimConvolution
name: "3DSTN-IsoGDNet"
layer {
  name: "data"
  type: "TridimData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    crop_size: 120
    mean_value: 128
    mean_value: 128
    mean_value: 128
    mirror: true
  }
  tridim_data_param {
    source: "/data2/xyyu/datasets/train_3.lst"
    root_folder: ""
    new_length: 10
    new_height: 120 #128
    new_width: 160 #171
    use_image: true
    show_data: false
    batch_size: 8
    shuffle: true
  }
}
layer {
  name: "data"
  type: "TridimData"
  top: "data"
  top: "label"
  include {
    phase: TEST
    #stage: "test-on-val"
  }
  transform_param {
    crop_size: 120
    mean_value: 128
    mean_value: 128
    mean_value: 128
    mirror: false
  }
  tridim_data_param {
    source: "/data2/xyyu/datasets/valid_3.lst"
    root_folder: ""
    new_length: 10
    new_height: 120 #128
    new_width: 160 #171
    use_image: true
    show_data: false
    batch_size: 10
    shuffle: true
  }
}

layer {
  name: "loc_conv1"
  type: "Convolution"
  bottom: "data"
  top: "loc_conv1"
  convolution_param {
    engine: CAFFE
    num_output: 20
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 1
    stride: 1
    pad: 1
    pad: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      # type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loc_pool1"
  type: "Pooling3D"
  bottom: "loc_conv1"
  top: "loc_pool1"
  pooling3d_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
    pad_l: 0
    kernel_l: 2
    stride_l: 2
  }
}
layer {
  name: "loc_relu1"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "loc_pool1"
  top: "loc_pool1"
}
layer {
  name: "loc_conv2"
  type: "Convolution"
  bottom: "loc_pool1"
  top: "loc_conv2"
  convolution_param {
    engine: CAFFE
    num_output: 20
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 1
    stride: 1
    pad: 1
    pad: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      # type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loc_pool2"
  type: "Pooling3D"
  bottom: "loc_conv2"
  top: "loc_pool2"
  pooling3d_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
    pad_l: 0
    kernel_l: 2
    stride_l: 2
  }
}
layer {
  name: "loc_relu2"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "loc_pool2"
  top: "loc_pool2"
}
layer {
  name: "loc_ip1"
  type: "InnerProduct"
  bottom: "loc_pool2"
  top: "loc_ip1"
  inner_product_param {
    num_output: 20
    weight_filler {
      type: "gaussian"
      std: 0.001
      # type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loc_relu3"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "loc_ip1"
  top: "loc_ip1"
}
layer {
  name: "loc_reg"
  type: "InnerProduct"
  bottom: "loc_ip1"
  top: "theta"
  inner_product_param {
    num_output: 12
    weight_filler {
      type: "constant"
      value: 0
    }
    bias_filler {
      type: "file"
      file: "examples/mnist_tests/bias_init.txt"
    }
  }
}
layer {
  name: "st_layer"
  type: "TridimSpatialTransformer"
  bottom: "data"
  bottom: "theta"
  top: "st_output"
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "st_output"
  top: "conv1"
  convolution_param {
    engine: CAFFE
    num_output: 32
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 1
    stride: 1
    pad: 1
    pad: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      # type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling3D"
  bottom: "conv1"
  top: "pool1"
  pooling3d_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
    pad_l: 0
    kernel_l: 2
    stride_l: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    engine: CAFFE
    num_output: 32
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 1
    stride: 1
    pad: 1
    pad: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      # type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling3D"
  bottom: "conv2"
  top: "pool2"
  pooling3d_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
    pad_l: 0
    kernel_l: 2
    stride_l: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  relu_param {
    engine:CAFFE
  }
  bottom: "pool2"
  top: "pool2"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "accuracy/top1"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy/top1"
  include {
    phase: TEST
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
